---
description: 주제를 입력하면 최신 정보를 검색하여 블로그 글을 작성합니다
---

# 블로그 글 자동 생성 규칙

사용자가 블로그 주제를 제공하면, 다음 프로세스를 따라 완성도 높은 블로그 글을 작성합니다.

## 📋 작성 프로세스

### 1. 웹 검색 수행 (필수) - Tavily MCP 사용

**반드시 `mcp_tavily-mcp_tavily-search` 도구를 사용하여 최신 정보를 검색합니다.**

- 주제에 대한 최신 정보를 tavily-mcp로 수집 (필수)
- 최소 2-3개의 검색어로 다각도 조사
- 검색 파라미터:
  - `max_results`: 10 (충분한 정보 수집)
  - `search_depth`: "advanced" (심층 검색)
  - `include_raw_content`: true (상세 내용 포함)

**검색 예시:**

```javascript
// 검색어 예시
"주제명 2025 최신 동향";
"주제명 가이드 튜토리얼";
"주제명 실전 예제 best practices";
```

**로그 출력:**

```javascript
console.log("🔍 Tavily 웹 검색 시작: [주제명]");
console.log("🌐 검색어 1: [검색어]");
console.log("🌐 검색어 2: [검색어]");
console.log("✅ 웹 검색 완료 - [N]개 결과 수집");
```

### 2. 파일명 생성

- 형식: `pages/주제-영문-slug.md`
- 영문 소문자, 하이픈으로 단어 구분
- 예시: `react-hooks-guide.md`, `python-async-programming.md`

### 3. Front Matter 작성

```markdown
---
title: "구체적이고 매력적인 제목 (50-70자)"
date: YYYY-MM-DD (오늘 날짜)
tags: ["태그1", "태그2", "태그3", "태그4", "태그5"]
category: "적절한 카테고리"
description: "게시글 요약 (100-150자)"
---
```

**카테고리 종류:**

- Development (개발/프로그래밍)
- Guide (가이드/튜토리얼)
- Politics (정치/사회)
- Technology (기술/IT)
- Science (과학)
- Business (비즈니스)
- Lifestyle (라이프스타일)

### 4. 본문 구조

#### 필수 섹션:

1. **대제목 (H1)** - title과 동일
2. **서론** - 주제 소개 (2-3 단락)
3. **주요 내용** - 3-5개의 H2 섹션
   - 각 섹션마다 H3 하위 항목 포함
   - 구체적인 예시와 설명
   - 코드 블록 (기술 주제인 경우)
4. **실전 예제/케이스 스터디** (선택)
5. **팁/주의사항** (선택)
6. **결론** - 요약 및 마무리
7. **참고자료** - 출처 링크 (최하단)

#### 필수 요소:

- **리스트**: 최소 3개 이상 사용
- **인용문 (>)**: 중요한 개념이나 명언
- **코드 블록**: 기술 주제는 필수, 언어 명시
- **볼드/이탤릭**: 강조할 내용
- **링크**: 외부 참고자료 3개 이상

### 5. 작성 스타일

#### 톤앤매너:

- **대상 독자**: 초보자도 이해할 수 있도록 쉽게
- **설명 방식**: 단계별, 체계적으로
- **문체**: 친근하고 전문적인 균형
- **길이**: 최소 800단어 이상 (한글 기준 2000자+)

#### 구성 원칙:

- **구체성**: 추상적 설명보다 구체적 예시
- **실용성**: 실제로 적용 가능한 내용
- **최신성**: 2024-2025년 최신 정보 반영
- **정확성**: 웹 검색으로 사실 확인

### 6. 마크다운 문법 활용

````markdown
# 대제목 (H1) - 페이지당 1개

## 섹션 제목 (H2)

### 하위 제목 (H3)

**굵은 글씨** - 중요 키워드
_기울임_ - 강조

- 순서 없는 리스트
  - 중첩 리스트

1. 순서 있는 리스트
2. 단계별 설명

> 인용문 - 중요한 개념이나 명언

`인라인 코드` - 짧은 코드나 명령어

```언어
// 코드 블록
function example() {
  return "Hello";
}
```
````

| 표  | 헤더 |
| --- | ---- |
| 셀  | 내용 |

[링크 텍스트](URL)

---

구분선

```

### 7. 품질 체크리스트

생성 전 반드시 확인:
- [ ] **Tavily MCP로 웹 검색 완료** (`mcp_tavily-mcp_tavily-search` 사용)
- [ ] **검색 깊이 "advanced" 설정 확인**
- [ ] **최소 2-3개 검색어로 다각도 조사 완료**
- [ ] Front Matter 모든 필드 작성
- [ ] 대제목(H1) 1개만 사용
- [ ] H2 섹션 최소 3개 이상
- [ ] 코드 블록 언어 명시 (기술 주제)
- [ ] 리스트 최소 3개 이상 사용
- [ ] 인용문 1개 이상 포함
- [ ] 외부 링크 3개 이상 포함 (Tavily 검색 결과 활용)
- [ ] 결론 섹션 포함
- [ ] 참고자료 섹션 포함 (최하단, Tavily 검색 출처 명시)
- [ ] 총 길이 800단어 이상 (한글 2000자+)
- [ ] 초보자도 이해 가능한 설명
- [ ] 최신 정보 반영 (2024-2025) - Tavily 검색으로 확인됨

### 8. 참고 예시

기존 블로그 글 참고:
- [git-commands-guide.md](mdc:pages/git-commands-guide.md) - 기술 가이드 형식
- [trump-political-journey.md](mdc:pages/trump-political-journey.md) - 이슈/분석 형식
- [example.md](mdc:pages/example.md) - 일반 게시글 형식
- [getting-started.md](mdc:pages/getting-started.md) - 튜토리얼 형식

## 🚨 주의사항

1. **반드시 Tavily MCP로 웹 검색 먼저 수행** - `mcp_tavily-mcp_tavily-search` 도구 사용 필수
2. **검색 깊이 설정** - `search_depth: "advanced"` 사용하여 심층 정보 수집
3. **한국어로 작성** - 전문 용어는 영문 병기
4. **로그 남기기** - 웹 검색 수행, 블로그 생성 완료 시 콘솔 로그
5. **표절 금지** - 검색 결과를 참고하되 재구성 필수
6. **사실 확인** - 불확실한 정보는 Tavily로 추가 검색하여 검증
7. **최신 정보 우선** - 2024-2025년 최신 정보에 가중치 부여

## 💡 사용 방법

사용자가 다음과 같이 요청하면 자동으로 블로그 글 생성:

```

"리액트 훅스에 대한 블로그 글 작성해줘"
"파이썬 비동기 프로그래밍 주제로 블로그 만들어줘"
"2025년 AI 트렌드 블로그 포스트 생성"

````

## 📝 생성 순서

### 1단계: Tavily MCP 웹 검색 (필수)

```javascript
// 반드시 mcp_tavily-mcp_tavily-search 사용
console.log("🔍 Tavily 웹 검색 시작: [주제명]");

// 검색 1: 최신 동향
mcp_tavily-mcp_tavily-search({
  query: "[주제명] 2025 최신 동향",
  max_results: 10,
  search_depth: "advanced",
  include_raw_content: true
});
console.log("🌐 검색 1 완료: 최신 동향");

// 검색 2: 가이드/튜토리얼
mcp_tavily-mcp_tavily-search({
  query: "[주제명] 가이드 튜토리얼",
  max_results: 10,
  search_depth: "advanced"
});
console.log("🌐 검색 2 완료: 가이드/튜토리얼");

// 검색 3: 실전 예제
mcp_tavily-mcp_tavily-search({
  query: "[주제명] 실전 예제 best practices",
  max_results: 10,
  search_depth: "advanced"
});
console.log("🌐 검색 3 완료: 실전 예제");

console.log("✅ 웹 검색 완료 - 충분한 정보 수집됨");
````

### 2단계: 정보 정리 및 구조화

```javascript
console.log("📋 검색 결과 분석 중...");
console.log("📊 최신 정보 필터링 및 구조화 완료");
```

### 3단계: 파일 생성 및 작성

```javascript
console.log("✍️ 블로그 글 작성 중: pages/[파일명].md");
console.log("📝 Front Matter 생성");
console.log("📝 본문 작성 (검색 결과 기반)");
```

### 4단계: 품질 검증

```javascript
console.log("✅ 품질 체크리스트 확인 중...");
console.log("✅ Tavily 검색 정보 반영 확인");
console.log("✅ 최신 정보 포함 확인 (2024-2025)");
console.log("✅ 모든 필수 요소 포함 확인");
```

### 5단계: 완료 보고

```javascript
console.log("🎉 블로그 글 생성 완료!");
console.log("📄 파일: pages/[파일명].md");
console.log("📊 단어 수: [총 단어 수]");
console.log("🌐 Tavily 검색 출처: [N]개 사이트 참조");
```

## ✨ 추가 기능

### 자동 posts.json 업데이트 안내

블로그 글 작성 후 사용자에게 다음 안내:

```

✅ 블로그 글이 생성되었습니다!

📌 다음 단계:

1. git add pages/[파일명].md
2. git commit -m "feat: [주제] 블로그 글 추가"
3. git push origin main

🔄 GitHub Actions가 자동으로 posts.json을 업데이트합니다.

```

### 로컬 테스트 안내

```

💻 로컬에서 확인하려면:
pnpm run dev 또는 python -m http.server 8000

```

## 🔧 Tavily MCP 사용 가이드

### 검색 함수: `mcp_tavily-mcp_tavily-search`

**필수 파라미터:**

- `query` (string): 검색어

**권장 파라미터:**

- `max_results` (number): 10 권장 (충분한 정보)
- `search_depth` (string): "advanced" 필수 (심층 검색)
- `include_raw_content` (boolean): true 권장 (상세 내용)
- `topic` (string): "general" 또는 "news"

**사용 예시:**

```javascript
// 예시 1: 기술 트렌드 검색
mcp_tavily -
  mcp_tavily -
  search({
    query: "React 19 최신 기능 2025",
    max_results: 10,
    search_depth: "advanced",
    include_raw_content: true,
    topic: "general",
  });

// 예시 2: 뉴스 검색
mcp_tavily -
  mcp_tavily -
  search({
    query: "AI 산업 동향",
    max_results: 10,
    search_depth: "advanced",
    topic: "news",
    days: 30, // 최근 30일
  });

// 예시 3: 튜토리얼 검색
mcp_tavily -
  mcp_tavily -
  search({
    query: "Python async await 사용법 예제",
    max_results: 10,
    search_depth: "advanced",
    include_raw_content: true,
  });
```

### 검색 결과 활용 방법

1. **최신성 확인**: 2024-2025년 정보 우선 사용
2. **신뢰성 검증**: 공식 문서, 유명 블로그 우선
3. **다각도 분석**: 여러 출처의 정보 종합
4. **재구성 필수**: 그대로 복사하지 않고 재작성

## 필수 사항

**블로그 글 작성 프로세스:**

1. ✅ **Tavily MCP로 웹 검색** (`mcp_tavily-mcp_tavily-search` 필수)
2. ✅ **검색 결과 기반 블로그 글 작성**
3. ✅ **posts.json 생성**: `node .github/scripts/generate-posts.js` 실행

**Tavily 검색 없이 블로그를 작성하지 마세요!**
